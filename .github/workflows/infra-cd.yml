# .github/workflows/infra-cd.yml
name: Infra CD (Deploy AWS CDK)

on:
  push:
    branches:
      - main
    paths:
      - 'apps/infra/**'
      - 'pnpm-workspace.yaml'
      - 'pnpm-lock.yaml'
  workflow_run:
    workflows:
      - "Backend CI (Build & Upload Lambda Artifact)"
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-northeast-2
      ARTIFACT_BUCKET_NAME_BASE: blog-lambda-artifacts-${{ secrets.AWS_ACCOUNT_ID }}

    # push 또는 Backend CI 성공 이후 workflow_run 두 이벤트 모두 실행
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # workflow_run 이벤트면 head SHA, 아니면 현재 SHA
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsCDKDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: CDK Diff (Optional but Recommended for Review)
        working-directory: ./apps/infra
        run: pnpm --filter infra cdk diff

      - name: CDK Deploy Infrastructure
        working-directory: ./apps/infra
        env:
          GITHUB_SHA: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}
          ARTIFACT_BUCKET_NAME: ${{ env.ARTIFACT_BUCKET_NAME_BASE }}-${{ env.AWS_REGION }}
        run: pnpm --filter infra cdk deploy \
          --require-approval never \
          --outputs-file cdk-outputs.json

      - name: Save CDK Outputs
        uses: actions/upload-artifact@v4
        with:
          name: cdk-outputs
          path: apps/infra/cdk-outputs.json
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

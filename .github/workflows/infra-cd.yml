name: Infra CD (Deploy AWS CDK)

on:
  push:
    branches:
      - main
    paths:
      - 'apps/infra/**'
      - 'pnpm-workspace.yaml'
      - 'pnpm-lock.yaml'
  workflow_run:
    workflows: ["Backend CI (Build & Upload Lambda Artifact)"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-northeast-2
      ARTIFACT_BUCKET_NAME_BASE: blog-lambda-artifacts-${{ secrets.AWS_ACCOUNT_ID }}

    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}
        # working-directory는 명시하지 않아 기본값(리포지토리 루트) 사용

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile # 이것은 항상 루트에서 실행됨

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsCDKDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Build Infra
        run: pnpm --filter infra build # ⭐ 변경: --filter infra 유지, working-directory 제거
        # working-directory: ./apps/infra # ⭐ 이 라인 삭제

      - name: CDK Diff (Optional but Recommended for Review)
        run: pnpm --filter infra cdk diff # ⭐ 변경: --filter infra 유지, working-directory 제거
        # working-directory: ./apps/infra # ⭐ 이 라인 삭제

      - name: CDK Deploy Infrastructure (with forced logging)
        run: |
          set -euxo pipefail
          DEPLOY_LOG_FILE="apps/infra/cdk_deploy_output.log" # ⭐ 변경: 로그 파일 경로 수정 (루트 기준)
          
          CDK_DEBUG=true NODE_OPTIONS="--max-old-space-size=4096" pnpm --filter infra cdk deploy --require-approval never --outputs-file apps/infra/cdk-outputs.json > "${DEPLOY_LOG_FILE}" 2>&1 || true # ⭐ 변경: outputs-file 경로 수정 (루트 기준)
          
          echo "--- CDK Deploy Output ---"
          cat "${DEPLOY_LOG_FILE}"
          echo "-------------------------"

          if grep -q "deployed" "${DEPLOY_LOG_FILE}"; then
            echo "CDK deploy command completed successfully."
          elif grep -q "No changes to deploy" "${DEPLOY_LOG_FILE}"; then
            echo "CDK deploy command completed with no changes to deploy."
          else
            echo "CDK deploy command failed. Check the output above for errors."
            exit 1
          fi
        # working-directory: ./apps/infra # ⭐ 이 라인 삭제
        env:
          GITHUB_SHA: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}
          ARTIFACT_BUCKET_NAME: ${{ env.ARTIFACT_BUCKET_NAME_BASE }}-${{ env.AWS_REGION }}

      - name: Save CDK Outputs
        uses: actions/upload-artifact@v4
        with:
          name: cdk-outputs
          path: apps/infra/cdk-outputs.json # ⭐ 이 경로는 계속 리포지토리 루트 기준
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
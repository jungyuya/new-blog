# .github/workflows/infra-cd.yml (최종 수정 제안)
name: Infra CD (Deploy AWS CDK)

on:
  workflow_run:
    workflows: ["Backend CI (Build & Test Backend Code)"] # Backend CI 워크플로우 이름과 일치하는지 확인
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Backend CI가 성공했을 때만 실행
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ap-northeast-2
      CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }} # CDK_DEFAULT_ACCOUNT 환경 변수 추가
      CDK_DEFAULT_REGION: ${{ env.AWS_REGION }} # CDK_DEFAULT_REGION 환경 변수 추가

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9 # pnpm 버전 9로 설정
          run_install: false # 의존성 설치는 별도 스텝에서 진행

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Monorepo Dependencies
        # ⭐ 핵심 변경: 이제 pnpm-lock.yaml에 esbuild가 포함될 것이므로,
        # 이 스텝에서 모든 의존성이 설치됩니다.
        run: pnpm install --frozen-lockfile

      # ⭐ 핵심 제거: 이전에 추가했던 'Install esbuild for CDK bundling' 스텝을 제거합니다. ⭐
      # - name: Install esbuild for CDK bundling
      #   run: pnpm add -Dw esbuild
      #   working-directory: ./apps/infra

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsCDKDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK Deploy Infrastructure
        working-directory: ./apps/infra # apps/infra 디렉토리로 이동
        run: pnpm exec cdk deploy --require-approval never # --require-approval never 추가하여 자동 배포
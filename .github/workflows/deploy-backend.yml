# .github/workflows/deploy-backend.yml
# [프로젝트 헌법] 제4조 부칙: 백엔드/인프라 통합 배포법 (OIDC 적용 최종안)
# 이 파일 하나가 백엔드 코드 빌드와 인프라 배포의 모든 책임을 진다.

name: Deploy Backend and Infrastructure to AWS

# 1. 실행 조건 (언제 이 워크플로우를 실행할 것인가?)
on:
  push:
    branches:
      - main # 'main' 브랜치에 push 이벤트가 발생했을 때만 실행
    paths:
      # 백엔드 코드 또는 인프라 코드가 변경되었을 때만 실행하여 불필요한 리소스 낭비를 막는다.
      - 'apps/backend/**'
      - 'apps/infra/**'
      - '.github/workflows/deploy-backend.yml' # 이 파일 자체가 변경되었을 때도 실행

# 2. 동시성 제어 (배포 충돌 방지)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 3. 실행할 작업 정의
jobs:
  deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest # 실행 환경: 최신 우분투 리눅스

    # 4. OIDC를 위한 권한 부여 (가장 중요)
    permissions:
      id-token: write # GitHub Actions가 AWS에 제시할 OIDC 토큰을 생성할 수 있는 권한
      contents: read  # 저장소 코드를 checkout 하기 위한 읽기 권한

    steps:
      # 5. 소스 코드 가져오기
      - name: Checkout repository
        uses: actions/checkout@v4

      # 6. pnpm 및 Node.js 환경 설정
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' # 람다 런타임과 일치
          cache: 'pnpm'

      # 7. 모든 의존성 설치
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 8. 빌드 및 테스트 실행
      # 이 단계는 배포 전에 코드가 최소한 빌드는 되는지, 테스트는 통과하는지 확인하는 안전장치 역할을 한다.
      - name: Build and Test
        run: |
          pnpm --filter backend build
          # pnpm --filter backend test # 향후 테스트 코드를 추가하면 이 줄의 주석을 해제할 예정.

      # 9. AWS 자격 증명 설정 (OIDC 방식)
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }} # GitHub Secrets에서 역할 ARN을 가져옴
          aws-region: ${{ secrets.AWS_REGION }}             # GitHub Secrets에서 리전 정보를 가져옴

      # 10. CDK 배포 실행 (코드 빌드 + 인프라 배포)
      # 이 한 줄이 백엔드 코드를 번들링하고 모든 인프라를 AWS에 배포하는 핵심이다.
      - name: Deploy to AWS with CDK
        run: pnpm --filter infra exec cdk deploy --all --require-approval never
        # --all: 워크스페이스 내의 모든 CDK 스택을 배포 (지금은 하나지만 향후 확장 대비)
        # --require-approval never: CI/CD 환경에서는 'y/n' 확인 없이 자동으로 배포를 승인
# .github/workflows/backend-ci.bak => deploy-backend.yml로 통합됨
name: Backend CI (Build & Test Backend Code) # 워크플로우 이름 변경: S3 업로드 책임 제거

on:
  push:
    branches:
      - main
    paths:
      - 'apps/backend/**' # backend 코드 변경 시 트리거
      - 'pnpm-workspace.yaml'
      - 'pnpm-lock.yaml'

jobs:
  build_and_test: # 잡 이름 변경
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC를 위한 권한 (Infra CD 트리거를 위해 유지)
      contents: read # 리포지토리 내용을 읽을 권한
    env:
      AWS_REGION: ap-northeast-2
      # ARTIFACT_BUCKET_NAME 환경 변수는 더 이상 필요 없습니다. 제거합니다.
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9 # pnpm 버전 9로 설정
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # pnpm-lock.yaml에 고정된 버전으로 설치 (재현성)

      # ⭐ 핵심 변경: S3 업로드를 위한 Configure AWS Credentials 스텝은 더 이상 필요 없습니다. 제거합니다. ⭐
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsCDKDeployRole
      #     aws-region: ${{ env.AWS_REGION }}

      - name: Build Backend Code
        run: pnpm --filter backend build # backend 워크스페이스 빌드

      # ⭐ 핵심 변경: Lambda Artifact Zip 및 Upload 스텝 전체 제거 ⭐
      # - name: Zip Lambda Artifact
      #   working-directory: ./apps/backend
      #   run: zip -r backend.zip dist

      # - name: Upload Lambda Artifact to S3
      #   working-directory: ./apps/backend
      #   run: |
      #     LAMBDA_ARTIFACT_PATH="backend.zip"
      #     LAMBDA_ARTIFACT_KEY="backend/${{ github.sha }}.zip"
      #     if [ ! -f "$LAMBDA_ARTIFACT_PATH" ]; then
      #       echo "Error: Lambda artifact not found at $LAMBDA_ARTIFACT_PATH. Build step might have failed or path is incorrect."
      #       exit 1
      #     fi
      #     aws s3 cp "${LAMBDA_ARTIFACT_PATH}" "s3://${{ env.ARTIFACT_BUCKET_NAME }}/${LAMBDA_ARTIFACT_KEY}"

Description: Full-stack infrastructure for the new-blog project
Parameters:
  ImageTag:
    Type: String
    Description: The ECR image tag to deploy.
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Resources:
  BlogUserPoolBB1AE2CC:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Mutable: true
          Name: email
          Required: true
      SmsVerificationMessage: The verification code to your new account is {####}
      UserPoolName: BlogUserPool-BlogInfraStack
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogUserPool/Resource
  BlogUserPoolBlogAppClientFC769CAF:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 1440
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - email
        - profile
      CallbackURLs:
        - http://localhost:3000
        - https://blog.jungyu.store
      ClientName: WebAppClient
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      IdTokenValidity: 1440
      LogoutURLs:
        - http://localhost:3000
        - https://blog.jungyu.store
      RefreshTokenValidity: 129600
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: minutes
      UserPoolId:
        Ref: BlogUserPoolBB1AE2CC
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogUserPool/BlogAppClient/Resource
  BlogPostsTable95467250:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      TableName: BlogPosts-BlogInfraStack
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogPostsTable/Resource
  BackendApiLambdaServiceRoleED0D8CBE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BlogInfraStack/BackendApiLambda/ServiceRole/Resource
  BackendApiLambdaServiceRoleDefaultPolicyFB6B1772:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BlogPostsTable95467250
                  - Arn
              - Ref: AWS::NoValue
          - Action: dynamodb:Query
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - BlogPostsTable95467250
                      - Arn
                  - /index/*
          - Action:
              - cognito-idp:SignUp
              - cognito-idp:InitiateAuth
              - cognito-idp:GlobalSignOut
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BlogUserPoolBB1AE2CC
                - Arn
        Version: "2012-10-17"
      PolicyName: BackendApiLambdaServiceRoleDefaultPolicyFB6B1772
      Roles:
        - Ref: BackendApiLambdaServiceRoleED0D8CBE
    Metadata:
      aws:cdk:path: BlogInfraStack/BackendApiLambda/ServiceRole/DefaultPolicy/Resource
  BackendApiLambda22D4E71D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-786382940028-ap-northeast-2
        S3Key: bf66217a32fadfb27db883136bc70277507d22bd7757f0a66a3120939e217562.zip
      Environment:
        Variables:
          NODE_ENV: production
          TABLE_NAME:
            Ref: BlogPostsTable95467250
          USER_POOL_ID:
            Ref: BlogUserPoolBB1AE2CC
          USER_POOL_CLIENT_ID:
            Ref: BlogUserPoolBlogAppClientFC769CAF
          REGION: ap-northeast-2
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          BACKEND_VERSION: 1.0.1
      FunctionName: blog-backend-api-BlogInfraStack
      Handler: index.handler
      MemorySize: 256
      Role:
        Fn::GetAtt:
          - BackendApiLambdaServiceRoleED0D8CBE
          - Arn
      Runtime: nodejs22.x
      Timeout: 30
      TracingConfig:
        Mode: Active
    DependsOn:
      - BackendApiLambdaServiceRoleDefaultPolicyFB6B1772
      - BackendApiLambdaServiceRoleED0D8CBE
    Metadata:
      aws:cdk:path: BlogInfraStack/BackendApiLambda/Resource
      aws:asset:path: asset.bf66217a32fadfb27db883136bc70277507d22bd7757f0a66a3120939e217562
      aws:asset:is-bundled: true
      aws:asset:property: Code
  BlogHttpApiGatewayCD53D1DC:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        AllowOrigins:
          - http://localhost:3000
          - https://blog.jungyu.store
      Name: BlogHttpApi-BlogInfraStack
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/Resource
  BlogHttpApiGatewayDefaultStage8637BB43:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AutoDeploy: true
      StageName: $default
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/DefaultStage/Resource
  BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--signup/LambdaIntegration/Resource
  BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationPermissionA0C300E5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/auth/signup
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--signup/LambdaIntegration-Permission
  BlogHttpApiGatewayPOSTauthsignup6EE81FD6:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: NONE
      RouteKey: POST /auth/signup
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--signup/Resource
  BlogHttpApiGatewayPOSTauthloginLambdaIntegrationPermission983841F3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/auth/login
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--login/LambdaIntegration-Permission
  BlogHttpApiGatewayPOSTauthlogin1891B012:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: NONE
      RouteKey: POST /auth/login
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--login/Resource
  BlogHttpApiGatewayGETpostsLambdaIntegrationPermission5E0D13CB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/posts
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/GET--posts/LambdaIntegration-Permission
  BlogHttpApiGatewayGETposts286343AC:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: NONE
      RouteKey: GET /posts
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/GET--posts/Resource
  BlogHttpApiGatewayGETpostspostIdLambdaIntegrationPermission1BFBF3F7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/posts/{postId}
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/GET--posts--{postId}/LambdaIntegration-Permission
  BlogHttpApiGatewayGETpostspostIdFF241D12:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: NONE
      RouteKey: GET /posts/{postId}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/GET--posts--{postId}/Resource
  BlogHttpApiGatewayGEThelloLambdaIntegrationPermission54D136A6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/hello
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/GET--hello/LambdaIntegration-Permission
  BlogHttpApiGatewayGEThello571971D3:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: NONE
      RouteKey: GET /hello
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/GET--hello/Resource
  BlogHttpApiGatewayPOSTauthlogoutLambdaIntegrationPermissionEE77EE5A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/auth/logout
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--logout/LambdaIntegration-Permission
  BlogHttpApiGatewayPOSTauthlogoutF62A6A0C:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BlogHttpApiGatewayBlogUserPoolAuthorizerB760AFB8
      RouteKey: POST /auth/logout
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--auth--logout/Resource
  BlogHttpApiGatewayBlogUserPoolAuthorizerB760AFB8:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizerType: JWT
      IdentitySource:
        - $request.header.Authorization
      JwtConfiguration:
        Audience:
          - Ref: BlogUserPoolBlogAppClientFC769CAF
        Issuer:
          Fn::Join:
            - ""
            - - https://cognito-idp.ap-northeast-2.amazonaws.com/
              - Ref: BlogUserPoolBB1AE2CC
      Name: BlogUserPoolAuthorizer
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/BlogUserPoolAuthorizer/Resource
  BlogHttpApiGatewayPOSTpostsLambdaIntegrationPermission3E8A719B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/posts
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--posts/LambdaIntegration-Permission
  BlogHttpApiGatewayPOSTposts807DDD79:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BlogHttpApiGatewayBlogUserPoolAuthorizerB760AFB8
      RouteKey: POST /posts
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/POST--posts/Resource
  BlogHttpApiGatewayPUTpostspostIdLambdaIntegrationPermission143F5D06:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/posts/{postId}
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/PUT--posts--{postId}/LambdaIntegration-Permission
  BlogHttpApiGatewayPUTpostspostIdC94D1533:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BlogHttpApiGatewayBlogUserPoolAuthorizerB760AFB8
      RouteKey: PUT /posts/{postId}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/PUT--posts--{postId}/Resource
  BlogHttpApiGatewayDELETEpostspostIdLambdaIntegrationPermission7A89E3F9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BackendApiLambda22D4E71D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-2:786382940028:"
            - Ref: BlogHttpApiGatewayCD53D1DC
            - /*/*/posts/{postId}
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/DELETE--posts--{postId}/LambdaIntegration-Permission
  BlogHttpApiGatewayDELETEpostspostId7842D832:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: BlogHttpApiGatewayCD53D1DC
      AuthorizationType: JWT
      AuthorizerId:
        Ref: BlogHttpApiGatewayBlogUserPoolAuthorizerB760AFB8
      RouteKey: DELETE /posts/{postId}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: BlogHttpApiGatewayPOSTauthsignupLambdaIntegrationC2068A4B
    Metadata:
      aws:cdk:path: BlogInfraStack/BlogHttpApiGateway/DELETE--posts--{postId}/Resource
  FrontendAssetsBucket52F4AD30:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:_next/static:b9554e13
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendAssetsBucket/Resource
  FrontendAssetsBucketPolicyC3DA97EC:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FrontendAssetsBucket52F4AD30
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutBucketPolicy
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - FrontendAssetsBucket52F4AD30
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendAssetsBucket52F4AD30
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - FrontendDistributionOrigin2S3Origin580119AF
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - FrontendAssetsBucket52F4AD30
                      - Arn
                  - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - FrontendDistributionOrigin3S3OriginEA4C263F
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - FrontendAssetsBucket52F4AD30
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendAssetsBucket/Policy/Resource
  FrontendAssetsBucketAutoDeleteObjectsCustomResource81511928:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: FrontendAssetsBucket52F4AD30
    DependsOn:
      - FrontendAssetsBucketPolicyC3DA97EC
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendAssetsBucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BlogInfraStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-786382940028-ap-northeast-2
        S3Key: faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs22.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: FrontendAssetsBucket52F4AD30
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: BlogInfraStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6
      aws:asset:property: Code
  FrontendServerLambdaServiceRole1087CF04:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendServerLambda/ServiceRole/Resource
  FrontendServerLambdaServiceRoleDefaultPolicy691C032A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendAssetsBucket52F4AD30
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendAssetsBucket52F4AD30
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: FrontendServerLambdaServiceRoleDefaultPolicy691C032A
      Roles:
        - Ref: FrontendServerLambdaServiceRole1087CF04
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendServerLambda/ServiceRole/DefaultPolicy/Resource
  FrontendServerLambdaDC0C127D:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - 786382940028.dkr.ecr.ap-northeast-2.
              - Ref: AWS::URLSuffix
              - "/new-blog-frontend:"
              - Ref: ImageTag
      Environment:
        Variables:
          AWS_LAMBDA_EXEC_WRAPPER: /opt/extensions/lambda-adapter
          PORT: "3000"
          NEXT_PUBLIC_API_ENDPOINT:
            Fn::Join:
              - ""
              - - https://
                - Ref: BlogHttpApiGatewayCD53D1DC
                - .execute-api.ap-northeast-2.
                - Ref: AWS::URLSuffix
                - /
          NEXT_PUBLIC_REGION: ap-northeast-2
          NEXT_PUBLIC_USER_POOL_ID:
            Ref: BlogUserPoolBB1AE2CC
          NEXT_PUBLIC_USER_POOL_CLIENT_ID:
            Ref: BlogUserPoolBlogAppClientFC769CAF
      FunctionName: blog-frontend-server-BlogInfraStack
      MemorySize: 1024
      PackageType: Image
      Role:
        Fn::GetAtt:
          - FrontendServerLambdaServiceRole1087CF04
          - Arn
      Timeout: 30
    DependsOn:
      - FrontendServerLambdaServiceRoleDefaultPolicy691C032A
      - FrontendServerLambdaServiceRole1087CF04
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendServerLambda/Resource
  FrontendServerLambdaFunctionUrl0E7F662D:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn:
        Fn::GetAtt:
          - FrontendServerLambdaDC0C127D
          - Arn
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendServerLambda/FunctionUrl/Resource
  FrontendServerLambdainvokefunctionurl813AF87B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName:
        Fn::GetAtt:
          - FrontendServerLambdaDC0C127D
          - Arn
      FunctionUrlAuthType: NONE
      Principal: "*"
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendServerLambda/invoke-function-url
  FrontendDistributionOrigin2S3Origin580119AF:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Identity for BlogInfraStackFrontendDistributionOrigin2CDDA1CA8
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendDistribution/Origin2/S3Origin/Resource
  FrontendDistributionOrigin3S3OriginEA4C263F:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Identity for BlogInfraStackFrontendDistributionOrigin3DD5A12C8
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendDistribution/Origin3/S3Origin/Resource
  FrontendDistributionE6EAF405:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - blog.jungyu.store
        CacheBehaviors:
          - CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            PathPattern: /_next/static/*
            TargetOriginId: BlogInfraStackFrontendDistributionOrigin2CDDA1CA8
            ViewerProtocolPolicy: redirect-to-https
          - CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            PathPattern: /assets/*
            TargetOriginId: BlogInfraStackFrontendDistributionOrigin3DD5A12C8
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            Compress: true
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
            PathPattern: /api/*
            TargetOriginId: BlogInfraStackFrontendDistributionOrigin41100FDA7
            ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          Compress: true
          OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
          TargetOriginId: BlogInfraStackFrontendDistributionOrigin1874C9186
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::Select:
                - 2
                - Fn::Split:
                    - /
                    - Fn::GetAtt:
                        - FrontendServerLambdaFunctionUrl0E7F662D
                        - FunctionUrl
            Id: BlogInfraStackFrontendDistributionOrigin1874C9186
          - DomainName:
              Fn::GetAtt:
                - FrontendAssetsBucket52F4AD30
                - RegionalDomainName
            Id: BlogInfraStackFrontendDistributionOrigin2CDDA1CA8
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: FrontendDistributionOrigin2S3Origin580119AF
          - DomainName:
              Fn::GetAtt:
                - FrontendAssetsBucket52F4AD30
                - RegionalDomainName
            Id: BlogInfraStackFrontendDistributionOrigin3DD5A12C8
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: FrontendDistributionOrigin3S3OriginEA4C263F
          - CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::Join:
                - ""
                - - Ref: BlogHttpApiGatewayCD53D1DC
                  - .execute-api.ap-northeast-2.
                  - Ref: AWS::URLSuffix
            Id: BlogInfraStackFrontendDistributionOrigin41100FDA7
        PriceClass: PriceClass_200
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:786382940028:certificate/d8aa46d8-b8dc-4d1b-b590-c5d4a52b7081
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
    Metadata:
      aws:cdk:path: BlogInfraStack/FrontendDistribution/Resource
  DeployFrontendAssetsAwsCliLayerBA5AC39B:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: cdk-hnb659fds-assets-786382940028-ap-northeast-2
        S3Key: c49d356cac773d491c5f7ac148995a1181498a8e289429f8612a7f7e3814f535.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: BlogInfraStack/DeployFrontendAssets/AwsCliLayer/Resource
      aws:asset:path: asset.c49d356cac773d491c5f7ac148995a1181498a8e289429f8612a7f7e3814f535.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  DeployFrontendAssetsCustomResourceF9C5DE62:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - cdk-hnb659fds-assets-786382940028-ap-northeast-2
      SourceObjectKeys:
        - 13c42fdcfa5c73e8315a6d0260f87f3b4578dfaa27432e23c824b0ddd8d7b1fa.zip
      DestinationBucketName:
        Ref: FrontendAssetsBucket52F4AD30
      DestinationBucketKeyPrefix: _next/static
      Prune: true
      DistributionId:
        Ref: FrontendDistributionE6EAF405
      DistributionPaths:
        - /_next/static/*
      OutputObjectKeys: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BlogInfraStack/DeployFrontendAssets/CustomResource/Default
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BlogInfraStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::cdk-hnb659fds-assets-786382940028-ap-northeast-2
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::cdk-hnb659fds-assets-786382940028-ap-northeast-2/*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - FrontendAssetsBucket52F4AD30
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FrontendAssetsBucket52F4AD30
                        - Arn
                    - /*
          - Action:
              - cloudfront:GetInvalidation
              - cloudfront:CreateInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: BlogInfraStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-786382940028-ap-northeast-2
        S3Key: 9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: DeployFrontendAssetsAwsCliLayerBA5AC39B
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.11
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: BlogInfraStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SiteARecord078DA7E7:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName:
          Fn::GetAtt:
            - FrontendDistributionE6EAF405
            - DomainName
        HostedZoneId:
          Fn::FindInMap:
            - AWSCloudFrontPartitionHostedZoneIdMap
            - Ref: AWS::Partition
            - zoneId
      HostedZoneId: Z0802600EUJ1KX823IZ7
      Name: blog.jungyu.store.
      Type: A
    Metadata:
      aws:cdk:path: BlogInfraStack/SiteARecord/Resource
  BackendApiLambdaErrorsAlarm50331283:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Lambda function errors detected!
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value:
            Ref: BackendApiLambda22D4E71D
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 1
    Metadata:
      aws:cdk:path: BlogInfraStack/BackendApiLambdaErrorsAlarm/Resource
  ApiGatewayServerErrorAlarm002176CB:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: API Gateway 5xx server errors detected!
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ApiId
          Value:
            Ref: BlogHttpApiGatewayCD53D1DC
      EvaluationPeriods: 1
      MetricName: 5xx
      Namespace: AWS/ApiGateway
      Period: 300
      Statistic: Sum
      Threshold: 1
    Metadata:
      aws:cdk:path: BlogInfraStack/ApiGatewayServerErrorAlarm/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/3VSwW7bMAz9lt4VLUsxbFfXQbEA2xo4664BIzMuE1kyJCqGJ/jfB8mNm27Y6T1S5OMTpZVcLT/L5R30fqHq80LTQcYdgzqL8mi24KBFRieg9/uobGOIrYzPHt3WWp1qZn4lpSY0fHs0ZUZRDwZaWx9k/AkHjakkk1FoaA817I2t8eTljwyPwSgmawRBK2Nlp4aMW6tJDdlhZqPw9/sI3iN7WSQQNXbaDi0alg9BnZHXcyJVyzhlH8CjmGiSe2UTvE25ja9mZSyPZvaYrKBryfsUra06o9u00OBccSXPblrbBN9gQPcLXW7bkWk0sjX/NI0COmqAsYfhspLxK3NXdJQUEqRwx9DkDU0kpSobeGIbw9g4uFr9K3yrKwK/WEe/0WXpORoFKicr7Kwntm7Ia1PahvrorGEZ1+TZ0SFkySdHDZlCKfR+U6Nh4rzGMjU8pob/VdzKjMIlX5/uZSwqVNbV2WtmO+Rxmt8DqxcZCw2uzZ4TGUdRobfBKRT5O6SdkGlEGTzbdj7Lelf+7mjr7IVqdPmir79Tp7faQ++VJln0vtSUny/JfIeuywOO5ilwF3gU6TPLk/9wWa3kxy9yeXfyRAsXDFOLsprwDxuYCemAAwAA
    Metadata:
      aws:cdk:path: BlogInfraStack/CDKMetadata/Default
Mappings:
  AWSCloudFrontPartitionHostedZoneIdMap:
    aws:
      zoneId: Z2FDTNDATAQYW2
    aws-cn:
      zoneId: Z3RFFRIM2A3IF5
Outputs:
  ApiGatewayEndpoint:
    Description: HTTP API Gateway endpoint URL
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: BlogHttpApiGatewayCD53D1DC
          - .execute-api.ap-northeast-2.
          - Ref: AWS::URLSuffix
          - /
  UserPoolIdOutput:
    Description: Cognito User Pool ID
    Value:
      Ref: BlogUserPoolBB1AE2CC
  UserPoolClientIdOutput:
    Description: Cognito User Pool App Client ID
    Value:
      Ref: BlogUserPoolBlogAppClientFC769CAF
  RegionOutput:
    Description: AWS Region
    Value: ap-northeast-2
  FrontendURL:
    Description: URL of the frontend CloudFront distribution
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - FrontendDistributionE6EAF405
              - DomainName


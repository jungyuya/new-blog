// 파일 위치: apps/frontend/src/app/layout.tsx (루트 레이아웃)
'use client'; // usePathname 훅을 사용하기 위해 클라이언트 컴포넌트로 전환

import { Inter } from "next/font/google";
import "./globals.css";
import Providers from "./providers";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import BackToTopButton from '@/components/BackToTopButton';
import { usePathname } from 'next/navigation'; // [신규] 경로를 읽기 위한 훅

const inter = Inter({ subsets: ["latin"] });

// Metadata는 서버 컴포넌트에서만 export할 수 있으므로, 
// 이 파일이 클라이언트 컴포넌트가 되면 별도의 파일로 분리하거나,
// 상위 layout.tsx(서버 컴포넌트)를 하나 더 만드는 것이 정석입니다.
// 우선은 간단하게 하기 위해 Metadata를 주석 처리하거나, 별도 layout 파일로 옮깁니다.
/*
export const metadata: Metadata = {
  title: "Deep Dive!",
  description: "Generated by LEEJUNGYU",
};
*/

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
 const pathname = usePathname();
 const isArchitecturePage = pathname.startsWith('/architecture');

 return (
    <html lang="ko" suppressHydrationWarning> 
      <body className={inter.className}>
        <div className="flex flex-col min-h-screen">
          <Providers>
            <Header />
            {/* [핵심 수정] 경로에 따라 다른 className을 적용합니다. */}
            <main className={
              isArchitecturePage 
                ? "flex-grow w-full" // 아키텍처 페이지: 전체 너비
                : "flex-grow max-w-7xl mx-auto px-6 py-8 w-full" // 그 외 페이지: 너비 제한
            }>
              {children}
            </main>
            <Footer />
          </Providers>
        </div>
        <BackToTopButton />
      </body>
    </html>
  );
}
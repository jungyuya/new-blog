{
 "Description": "Stack for the CI/CD support infrastructure (EC2 Self-Hosted Runner)",
 "Resources": {
  "RunnerSecurityGroupDE989EBE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for the EC2 self-hosted runner",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-09064aa8dcdebfc42"
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerSecurityGroup/Resource"
   }
  },
  "RunnerRoleBA0605C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "IAM Role for the self-hosted runner EC2 instance",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerRole/Resource"
   }
  },
  "RunnerRoleDefaultPolicyF88A4DBD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParametersByPath",
        "ssm:GetParameter"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:ssm:ap-northeast-2:786382940028:parameter/new-blog/cicd/*"
      },
      {
       "Action": "cloudfront:CreateInvalidation",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "cloudformation:*",
        "iam:PassRole",
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RunnerRoleDefaultPolicyF88A4DBD",
    "Roles": [
     {
      "Ref": "RunnerRoleBA0605C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerRole/DefaultPolicy/Resource"
   }
  },
  "GitHubRunnerInstanceInstanceProfileF9DDF1ED": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "RunnerRoleBA0605C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/GitHubRunnerInstance/InstanceProfile"
   }
  },
  "GitHubRunnerInstance6965C09B": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2a",
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": true,
       "VolumeSize": 30,
       "VolumeType": "gp3"
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "GitHubRunnerInstanceInstanceProfileF9DDF1ED"
    },
    "ImageId": "ami-07180ab354582638a",
    "InstanceType": "t4g.small",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RunnerSecurityGroupDE989EBE",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-0ccc097504af25410",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CiCdStack/GitHubRunnerInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\ndnf update -y\ndnf install -y git jq docker\nsystemctl enable --now docker\nusermod -aG docker ec2-user || true\necho \"IyEvYmluL2Jhc2gKIyDtjIzsnbwg7JyE7LmYOiBzY3JpcHRzL3NldHVwX3J1bm5lci5zaCAodjcgRmluYWwgLSBOVk0gSW5pdGlhbGl6YXRpb24gRml4KQpzZXQgLWV1byBwaXBlZmFpbAoKTE9HRklMRT0iL2hvbWUvZWMyLXVzZXIvcnVubmVyX3NldHVwLmxvZyIKZXhlYyA+ID4odGVlIC1hICIkTE9HRklMRSIgfCBsb2dnZXIgLXQgcnVubmVyLXNldHVwKSAyPiYxCmVjaG8gIltJTkZPXSBSdW5uZXIgc2V0dXAgc2NyaXB0IHN0YXJ0ZWQgYXQgJChkYXRlIC11KSIKZXhwb3J0IEhPTUU9Ii9ob21lL2VjMi11c2VyIgpleHBvcnQgUlVOTkVSX0RJUj0iJEhPTUUvYWN0aW9ucy1ydW5uZXIiCiMgW+2VteyLrCDsiJjsoJVdIE5WTV9ESVIg67OA7IiY66W8IOyKpO2BrOumve2KuCDstZzsg4Hri6jsl5Ag66qF7Iuc7KCB7Jy866GcIGV4cG9ydCDtlanri4jri6QuCmV4cG9ydCBOVk1fRElSPSIkSE9NRS8ubnZtIgoKaWYgWyAtZiAiJHtSVU5ORVJfRElSfS8ucnVubmVyIiBdOyB0aGVuCiAgZWNobyAiW0lORk9dIFJ1bm5lciBhbHJlYWR5IGNvbmZpZ3VyZWQuIEVuc3VyaW5nIHNlcnZpY2UgaXMgaW5zdGFsbGVkIGFuZCBzdGFydGVkLiIKICBjZCAiJHtSVU5ORVJfRElSfSIKICBET0NLRVJfQ09ORklHX0RJUj0iJEhPTUUvLmRvY2tlciIKICBFQ1JfVVJMPSI3ODYzODI5NDAwMjguZGtyLmVjci4ke0FXU19SRUdJT046LWFwLW5vcnRoZWFzdC0yfS5hbWF6b25hd3MuY29tIgogIG1rZGlyIC1wICIkRE9DS0VSX0NPTkZJR19ESVIiCiAgaWYgISBncmVwIC1xICJlY3ItbG9naW4iICIke0RPQ0tFUl9DT05GSUdfRElSfS9jb25maWcuanNvbiIgMj4vZGV2L251bGw7IHRoZW4KICAgIGVjaG8gIltJTkZPXSBEb2NrZXIgY3JlZEhlbHBlciBmb3IgRUNSIG5vdCBmb3VuZCwgY29uZmlndXJpbmcuLi4iCiAgICBjYXQgPiAiJHtET0NLRVJfQ09ORklHX0RJUn0vY29uZmlnLmpzb24iIDw8RU9GCnsKICAgICJjcmVkSGVscGVycyI6IHsKICAgICAgICAiJHtFQ1JfVVJMfSI6ICJlY3ItbG9naW4iCiAgICB9Cn0KRU9GCiAgICBjaG93biAtUiBlYzItdXNlcjplYzItdXNlciAiJERPQ0tFUl9DT05GSUdfRElSIgogIGZpCiAgc3VkbyAuL3N2Yy5zaCBpbnN0YWxsIHx8IHRydWUKICBzdWRvIC4vc3ZjLnNoIHN0YXJ0ICAgfHwgdHJ1ZQogIGVjaG8gIltJTkZPXSBSdW5uZXIgc2VydmljZSBlbnN1cmVkLiBFeGl0aW5nLiIKICBleGl0IDAKZmkKZ2V0X2ltZHMoKSB7CiAgdG9rZW49JChjdXJsIC1zIC1YIFBVVCAiaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvYXBpL3Rva2VuIiAtSCAiWC1hd3MtZWMyLW1ldGFkYXRhLXRva2VuLXR0bC1zZWNvbmRzOiAyMTYwMCIgfHwgdHJ1ZSkKICBpZiBbIC1uICIkdG9rZW4iIF07IHRoZW4KICAgIGN1cmwgLXMgLUggIlgtYXdzLWVjMi1tZXRhZGF0YS10b2tlbjogJHRva2VuIiAiJEAiCiAgZWxzZQogICAgY3VybCAtcyAiJEAiCiAgZmkKfQpBV1NfUkVHSU9OPSQoZ2V0X2ltZHMgaHR0cDovLzE2OS4yNTQuMTY5LjI1NC9sYXRlc3QvZHluYW1pYy9pbnN0YW5jZS1pZGVudGl0eS9kb2N1bWVudCB8IGpxIC1yIC5yZWdpb24pCgpSRVBPX09XTkVSPSJqdW5neXV5YSIKUkVQT19OQU1FPSJuZXctYmxvZyIKUEFSQU1FVEVSX1BBVEg9Ii9uZXctYmxvZy9jaWNkIgoKbWtkaXIgLXAgIiRSVU5ORVJfRElSIgpjaG93biBlYzItdXNlcjplYzItdXNlciAiJFJVTk5FUl9ESVIiCgppZiAhIGNvbW1hbmQgLXYgZG9ja2VyLWNyZWRlbnRpYWwtZWNyLWxvZ2luID4vZGV2L251bGwgMj4mMTsgdGhlbgogIGVjaG8gIltJTkZPXSBJbnN0YWxsaW5nIGRvY2tlci1jcmVkZW50aWFsLWVjci1sb2dpbiBoZWxwZXIuLi4iCiAgc3VkbyBkbmYgaW5zdGFsbCAteSBhbWF6b24tZWNyLWNyZWRlbnRpYWwtaGVscGVyIHx8IHRydWUKZmkKCmNkICIkSE9NRSIKaWYgWyAhIC1kICIkTlZNX0RJUiIgXTsgdGhlbgogIGVjaG8gIi0tLSBJbnN0YWxsaW5nIG52bSAtLS0iCiAgY3VybCAtby0gaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL252bS1zaC9udm0vdjAuMzkuNy9pbnN0YWxsLnNoIHwgYmFzaApmaQoKIyBb7ZW17IusIOyImOyglV0g6riw7KG07J2YIGlmIOusuOydhCDsoJzqsbDtlZjqs6AsIG52beydhCDsgqzsmqntlZjquLAg7KeB7KCE7JeQIO2VreyDgSDstIjquLDtmZQg7Iqk7YGs66a97Yq466W8IHNvdXJjZSDtlanri4jri6QuCiMg7J2066CH6rKMIO2VmOuptCBub24taW50ZXJhY3RpdmUg7IW47JeQ7ISc64+EIG52bSDrqoXroLnslrTqsIAg7ZmV7Iuk7ZWY6rKMIOyekeuPme2VqeuLiOuLpC4KLiAiJE5WTV9ESVIvbnZtLnNoIgoKIyBb7ZW17IusIOyImOyglV0g7J207KCcIG52bSDrqoXroLnslrTqsIAg7JmE67K97ZWY6rKMIOyekeuPme2VmOuKlCDqsoPsnbQg67O07J6l65Cp64uI64ukLgpudm0gaW5zdGFsbCAyMgpucG0gaW5zdGFsbCAtZyBwbnBtCgpOT0RFX0JJTl9ESVI9IiROVk1fRElSL3ZlcnNpb25zL25vZGUvJChudm0gdmVyc2lvbikvYmluIgppZiBbIC1kICIkTk9ERV9CSU5fRElSIiBdOyB0aGVuCiAgc3VkbyBsbiAtc2YgIiROT0RFX0JJTl9ESVIvbm9kZSIgL3Vzci9iaW4vbm9kZQogIHN1ZG8gbG4gLXNmICIkTk9ERV9CSU5fRElSL25wbSIgL3Vzci9iaW4vbnBtCiAgc3VkbyBsbiAtc2YgIiROT0RFX0JJTl9ESVIvbnB4IiAvdXNyL2Jpbi9ucHgKZmkKaWYgY29tbWFuZCAtdiBwbnBtID4vZGV2L251bGwgMj4mMTsgdGhlbgogIHN1ZG8gbG4gLXNmICIkKGNvbW1hbmQgLXYgcG5wbSkiIC91c3IvYmluL3BucG0KZmkKZWNobyAiTm9kZSB2ZXJzaW9uOiAkKG5vZGUgLS12ZXJzaW9uKSIKZWNobyAicG5wbSB2ZXJzaW9uOiAkKHBucG0gLS12ZXJzaW9uKSIKCmNkICIkUlVOTkVSX0RJUiIKTEFURVNUX1RBRz0kKGN1cmwgLXMgJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvYWN0aW9ucy9ydW5uZXIvcmVsZWFzZXMvbGF0ZXN0JyB8IGpxIC1yIC50YWdfbmFtZSB8IHNlZCAncy9edi8vJykKVEFSQkFMTD0iYWN0aW9ucy1ydW5uZXItbGludXgtYXJtNjQtJHtMQVRFU1RfVEFHfS50YXIuZ3oiCmVjaG8gIltJTkZPXSBEb3dubG9hZGluZyBHaXRIdWIgUnVubmVyIHYke0xBVEVTVF9UQUd9Li4uIgpuPTAKdW50aWwgWyAkbiAtZ2UgNSBdCmRvCiAgY3VybCAtLWZhaWwgLS1zaWxlbnQgLS1zaG93LWVycm9yIC1MIC1vICIke1RBUkJBTEx9IiAiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL3JlbGVhc2VzL2Rvd25sb2FkL3Yke0xBVEVTVF9UQUd9LyR7VEFSQkFMTH0iICYmIGJyZWFrCiAgbj0kKChuKzEpKQogIGVjaG8gIltXQVJOXSBUYXJiYWxsIGRvd25sb2FkIGZhaWxlZCwgcmV0cnkgJG4vNSBpbiAzIHNlY29uZHMuLi4iCiAgc2xlZXAgMwpkb25lCmlmIFsgISAtZiAiJHtUQVJCQUxMfSIgXTsgdGhlbgogIGVjaG8gIltFUlJPUl0gRG93bmxvYWQgZmFpbGVkIGFmdGVyIDUgcmV0cmllcy4iID4mMgogIGV4aXQgMQpmaQp0YXIgeHpmICIke1RBUkJBTEx9IgppZiBbIC1mICIuL2Jpbi9pbnN0YWxsZGVwZW5kZW5jaWVzLnNoIiBdOyB0aGVuCiAgZWNobyAiW0lORk9dIFJ1bm5pbmcgcHJvdmlkZWQgaW5zdGFsbGRlcGVuZGVuY2llcy5zaC4uLiIKICBzdWRvIC4vYmluL2luc3RhbGxkZXBlbmRlbmNpZXMuc2ggfHwgZWNobyAiW1dBUk5dIGluc3RhbGxkZXBlbmRlbmNpZXMuc2ggZmFpbGVkLCBjb250aW51aW5nIHdpdGggZmFsbGJhY2suIgpmaQppZiAhIGxkY29uZmlnIC1wIHwgZ3JlcCAtaSBsaWJpY3UgPi9kZXYvbnVsbCAyPiYxOyB0aGVuCiAgZWNobyAiW0lORk9dIGxpYmljdSBub3QgZm91bmQuIEluc3RhbGxpbmcgZmFsbGJhY2sgZGVwZW5kZW5jaWVzLi4uIgogIHN1ZG8gZG5mIGluc3RhbGwgLXkgbGliaWN1IGxpYnVud2luZCB8fCB0cnVlCmZpCgplY2hvICJbSU5GT10gUmV0cmlldmluZyBzZWNyZXRzIGZyb20gU1NNIFBhcmFtZXRlciBTdG9yZS4uLiIKU0VDUkVUU19KU09OPSQoYXdzIHNzbSBnZXQtcGFyYW1ldGVycyBcCiAgLS1uYW1lcyAiJHtQQVJBTUVURVJfUEFUSH0vZ2l0aHViLXBhdCIgIiR7UEFSQU1FVEVSX1BBVEh9L3R1cmJvLXRva2VuIiAiJHtQQVJBTUVURVJfUEFUSH0vdHVyYm8tc2lnbmF0dXJlLWtleSIgXAogIC0td2l0aC1kZWNyeXB0aW9uIC0tcXVlcnkgIlBhcmFtZXRlcnMiIC0tb3V0cHV0IGpzb24gLS1yZWdpb24gIiR7QVdTX1JFR0lPTn0iKQoKR0lUSFVCX1BBVD0kKGVjaG8gIiR7U0VDUkVUU19KU09OfSIgfCBqcSAtciAnLltdIHwgc2VsZWN0KC5OYW1lPT0iJyR7UEFSQU1FVEVSX1BBVEh9L2dpdGh1Yi1wYXQnIikuVmFsdWUnKQpleHBvcnQgVFVSQk9fVE9LRU49JChlY2hvICIke1NFQ1JFVFNfSlNPTn0iIHwganEgLXIgJy5bXSB8IHNlbGVjdCguTmFtZT09Iicke1BBUkFNRVRFUl9QQVRIfS90dXJiby10b2tlbiciKS5WYWx1ZScpCmV4cG9ydCBUVVJCT19SRU1PVEVfQ0FDSEVfU0lHTkFUVVJFX0tFWT0kKGVjaG8gIiR7U0VDUkVUU19KU09OfSIgfCBqcSAtciAnLltdIHwgc2VsZWN0KC5OYW1lPT0iJyR7UEFSQU1FVEVSX1BBVEh9L3R1cmJvLXNpZ25hdHVyZS1rZXknIikuVmFsdWUnKQoKaWYgWyAteiAiJHtHSVRIVUJfUEFUfSIgXTsgdGhlbgogIGVjaG8gJ1tFUlJPUl0gQ291bGQgbm90IGZldGNoIEdpdEh1YiBQQVQgZnJvbSBTU00gUGFyYW1ldGVyIFN0b3JlLicgPiYyCiAgZXhpdCAxCmZpCgplY2hvICJbSU5GT10gUmVxdWVzdGluZyByZWdpc3RyYXRpb24gdG9rZW4uLi4iClJFR19UT0tFTj0kKGN1cmwgLXNYIFBPU1QgLUggIkF1dGhvcml6YXRpb246IHRva2VuICR7R0lUSFVCX1BBVH0iICJodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zLyR7UkVQT19PV05FUn0vJHtSRVBPX05BTUV9L2FjdGlvbnMvcnVubmVycy9yZWdpc3RyYXRpb24tdG9rZW4iIHwganEgLXIgLnRva2VuKQppZiBbIC16ICIke1JFR19UT0tFTn0iIF07IHRoZW4KICBlY2hvICdbRVJST1JdIEZhaWxlZCB0byBnZXQgcmVnaXN0cmF0aW9uIHRva2VuLicgPiYyCiAgZXhpdCAxCmZpCgplY2hvICJbSU5GT10gQ29uZmlndXJpbmcgcnVubmVyLi4uIgpSRVBPX1dFQl9VUkw9Imh0dHBzOi8vZ2l0aHViLmNvbS8ke1JFUE9fT1dORVJ9LyR7UkVQT19OQU1FfSIKLi9jb25maWcuc2ggLS11cmwgIiR7UkVQT19XRUJfVVJMfSIgLS10b2tlbiAiJHtSRUdfVE9LRU59IiAtLW5hbWUgIiQoaG9zdG5hbWUpIiAtLWxhYmVscyAic2VsZi1ob3N0ZWQsbGludXgsYXJtNjQiIC0tdW5hdHRlbmRlZCAtLXJlcGxhY2UKCkRPQ0tFUl9DT05GSUdfRElSPSIkSE9NRS8uZG9ja2VyIgpta2RpciAtcCAiJERPQ0tFUl9DT05GSUdfRElSIgpFQ1JfVVJMPSI3ODYzODI5NDAwMjguZGtyLmVjci4ke0FXU19SRUdJT059LmFtYXpvbmF3cy5jb20iCgplY2hvICJbSU5GT10gQ29uZmlndXJpbmcgRG9ja2VyIHRvIHVzZSBFQ1IgY3JlZGVudGlhbCBoZWxwZXIgZm9yICR7RUNSX1VSTH0uLi4iCmNhdCA+ICIke0RPQ0tFUl9DT05GSUdfRElSfS9jb25maWcuanNvbiIgPDxFT0YKewogICAgImNyZWRIZWxwZXJzIjogewogICAgICAgICIke0VDUl9VUkx9IjogImVjci1sb2dpbiIKICAgIH0KfQpFT0YKY2hvd24gLVIgZWMyLXVzZXI6ZWMyLXVzZXIgIiRET0NLRVJfQ09ORklHX0RJUiIKCmVjaG8gIltJTkZPXSBJbnN0YWxsaW5nIGFuZCBzdGFydGluZyBydW5uZXIgc2VydmljZS4uLiIKc3VkbyAuL3N2Yy5zaCBpbnN0YWxsCnN1ZG8gLi9zdmMuc2ggc3RhcnQKCmVjaG8gIltJTkZPXSBSdW5uZXIgc2V0dXAgc2NyaXB0IGZpbmlzaGVkIHN1Y2Nlc3NmdWxseSBhdCAkKGRhdGUgLXUpIg==\" | base64 -d > /home/ec2-user/setup_runner.sh\nchown ec2-user:ec2-user /home/ec2-user/setup_runner.sh\nchmod +x /home/ec2-user/setup_runner.sh\nsudo -u ec2-user /home/ec2-user/setup_runner.sh"
    }
   },
   "DependsOn": [
    "RunnerRoleDefaultPolicyF88A4DBD",
    "RunnerRoleBA0605C0"
   ],
   "Metadata": {
    "aws:cdk:path": "CiCdStack/GitHubRunnerInstance/Resource"
   }
  },
  "RunnerEIP": {
   "Type": "AWS::EC2::EIP",
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerEIP"
   }
  },
  "RunnerEIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Properties": {
    "EIP": {
     "Ref": "RunnerEIP"
    },
    "InstanceId": {
     "Ref": "GitHubRunnerInstance6965C09B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerEIPAssociation"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WMyw6CMBBFv8V9GbEb3RpjDCsJfICppSQDpUP6kJCm/25Ajbo695XLged7yDdicpls+kzjHWLthexZpRwFKxUTk7tFJTnEWslg0c8XS2Fkp9b8B4VxXhipluZXn4vyjaNzJFF4JJMYigFiRXrdrCxJo5wX+1Wfo9JSi1qltITX4MfgEzPUKOjc9sE57A6QbzqHmNlgPA4KqhefUXQlwOQAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RunnerPublicIP": {
   "Description": "Public IP address of the self-hosted runner EC2 instance.",
   "Value": {
    "Ref": "RunnerEIP"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}
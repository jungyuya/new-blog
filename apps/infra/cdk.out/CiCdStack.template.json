{
 "Description": "Stack for the CI/CD support infrastructure (EC2 Self-Hosted Runner)",
 "Resources": {
  "DefaultVpcSecretsManagerEndpointSecurityGroupE273AA4E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CiCdStack/DefaultVpc/SecretsManagerEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "172.31.0.0/16",
      "Description": "from 172.31.0.0/16:443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-09064aa8dcdebfc42"
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/DefaultVpc/SecretsManagerEndpoint/SecurityGroup/Resource"
   }
  },
  "DefaultVpcSecretsManagerEndpointSecurityGroupfromCiCdStackRunnerSecurityGroupE251960344300198DA7": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from CiCdStackRunnerSecurityGroupE2519603:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "DefaultVpcSecretsManagerEndpointSecurityGroupE273AA4E",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "RunnerSecurityGroupDE989EBE",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/DefaultVpc/SecretsManagerEndpoint/SecurityGroup/from CiCdStackRunnerSecurityGroupE2519603:443"
   }
  },
  "DefaultVpcSecretsManagerEndpoint13E23E82": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "DefaultVpcSecretsManagerEndpointSecurityGroupE273AA4E",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.ap-northeast-2.secretsmanager",
    "SubnetIds": [
     "subnet-0ccc097504af25410",
     "subnet-0096ce9f9bb4494d5",
     "subnet-0080dfc4df4676ff0",
     "subnet-0682caf8cc8bb77d3"
    ],
    "VpcEndpointType": "Interface",
    "VpcId": "vpc-09064aa8dcdebfc42"
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/DefaultVpc/SecretsManagerEndpoint/Resource"
   }
  },
  "RunnerSecurityGroupDE989EBE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for the EC2 self-hosted runner",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-09064aa8dcdebfc42"
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerSecurityGroup/Resource"
   }
  },
  "RunnerRoleBA0605C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "IAM Role for the self-hosted runner EC2 instance",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerRole/Resource"
   }
  },
  "RunnerRoleDefaultPolicyF88A4DBD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":secretsmanager:ap-northeast-2:786382940028:secret:cicd/github-runner-pat-??????"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RunnerRoleDefaultPolicyF88A4DBD",
    "Roles": [
     {
      "Ref": "RunnerRoleBA0605C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerRole/DefaultPolicy/Resource"
   }
  },
  "GitHubRunnerInstanceInstanceProfileF9DDF1ED": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "RunnerRoleBA0605C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/GitHubRunnerInstance/InstanceProfile"
   }
  },
  "GitHubRunnerInstance6965C09B": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2a",
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": true,
       "VolumeSize": 30,
       "VolumeType": "gp3"
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "GitHubRunnerInstanceInstanceProfileF9DDF1ED"
    },
    "ImageId": "ami-07180ab354582638a",
    "InstanceType": "t4g.small",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RunnerSecurityGroupDE989EBE",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-0ccc097504af25410",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CiCdStack/GitHubRunnerInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\ndnf update -y\ndnf install -y git jq docker\nsystemctl enable --now docker\nusermod -aG docker ec2-user\nsu - ec2-user <<'EOF'\n  # GitHub 리포지토리를 클론합니다.\n  git clone https://github.com/jungyuya/new-blog.git\n  cd new-blog\n  \n  # 설치 스크립트에 실행 권한을 부여하고 실행합니다.\n  chmod +x ./scripts/setup_runner.sh\n  ./scripts/setup_runner.sh\nEOF"
    }
   },
   "DependsOn": [
    "RunnerRoleDefaultPolicyF88A4DBD",
    "RunnerRoleBA0605C0"
   ],
   "Metadata": {
    "aws:cdk:path": "CiCdStack/GitHubRunnerInstance/Resource"
   }
  },
  "RunnerEIP": {
   "Type": "AWS::EC2::EIP",
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerEIP"
   }
  },
  "RunnerEIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Properties": {
    "EIP": {
     "Ref": "RunnerEIP"
    },
    "InstanceId": {
     "Ref": "GitHubRunnerInstance6965C09B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerEIPAssociation"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32MTW/CQAxEfwv3jUn3Uq4IoSonoiBxRVvHqQzBG629RSjKf69CP+DU05t5Go0HX75CuQhXLbA9Fz2/w7i3gGfXkMackFy46nEk9DBWYpS6gHQYcCvtEFnM7QlzYru9pZgHt+nkf1HJRyLV2R/qzd9LJWpBkGb/nLdV/YO1akQOxlEmx+ECYxP7++bOOvaMt7k+0u9RnWLHPU3TLHfZhmyTk9gSnHT56T28rKBcnJS5SFmMLwTNN78Am8I5JCABAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RunnerPublicIP": {
   "Description": "Public IP address of the self-hosted runner EC2 instance.",
   "Value": {
    "Ref": "RunnerEIP"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}
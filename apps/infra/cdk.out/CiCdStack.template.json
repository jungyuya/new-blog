{
 "Description": "Stack for the CI/CD support infrastructure (EC2 Self-Hosted Runner)",
 "Resources": {
  "RunnerSecurityGroupDE989EBE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for the EC2 self-hosted runner",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-09064aa8dcdebfc42"
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerSecurityGroup/Resource"
   }
  },
  "RunnerRoleBA0605C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "IAM Role for the self-hosted runner EC2 instance",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerRole/Resource"
   }
  },
  "RunnerRoleDefaultPolicyF88A4DBD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParametersByPath",
        "ssm:GetParameter"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:ssm:ap-northeast-2:786382940028:parameter/new-blog/cicd/*"
      },
      {
       "Action": "cloudfront:CreateInvalidation",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "cloudformation:*",
        "iam:PassRole",
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RunnerRoleDefaultPolicyF88A4DBD",
    "Roles": [
     {
      "Ref": "RunnerRoleBA0605C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerRole/DefaultPolicy/Resource"
   }
  },
  "GitHubRunnerInstanceInstanceProfileF9DDF1ED": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "RunnerRoleBA0605C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/GitHubRunnerInstance/InstanceProfile"
   }
  },
  "GitHubRunnerInstance6965C09B": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-northeast-2a",
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": true,
       "VolumeSize": 30,
       "VolumeType": "gp3"
      }
     }
    ],
    "IamInstanceProfile": {
     "Ref": "GitHubRunnerInstanceInstanceProfileF9DDF1ED"
    },
    "ImageId": "ami-07180ab354582638a",
    "InstanceType": "t4g.small",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RunnerSecurityGroupDE989EBE",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-0ccc097504af25410",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CiCdStack/GitHubRunnerInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\ndnf update -y\ndnf install -y git jq docker\nsystemctl enable --now docker\nusermod -aG docker ec2-user || true\necho \"IyEvYmluL2Jhc2gKIyDtjIzsnbwg7JyE7LmYOiBzY3JpcHRzL3NldHVwX3J1bm5lci5zaCAodjcgRmluYWwgLSBOVk0gSW5pdGlhbGl6YXRpb24gRml4KQpzZXQgLWV1byBwaXBlZmFpbAoKTE9HRklMRT0iL2hvbWUvZWMyLXVzZXIvcnVubmVyX3NldHVwLmxvZyIKZXhlYyA+ID4odGVlIC1hICIkTE9HRklMRSIgfCBsb2dnZXIgLXQgcnVubmVyLXNldHVwKSAyPiYxCmVjaG8gIltJTkZPXSBSdW5uZXIgc2V0dXAgc2NyaXB0IHN0YXJ0ZWQgYXQgJChkYXRlIC11KSIKZXhwb3J0IEhPTUU9Ii9ob21lL2VjMi11c2VyIgpleHBvcnQgUlVOTkVSX0RJUj0iJEhPTUUvYWN0aW9ucy1ydW5uZXIiCiMgW+2VteyLrCDsiJjsoJVdIE5WTV9ESVIg67OA7IiY66W8IOyKpO2BrOumve2KuCDstZzsg4Hri6jsl5Ag66qF7Iuc7KCB7Jy866GcIGV4cG9ydCDtlanri4jri6QuCmV4cG9ydCBOVk1fRElSPSIkSE9NRS8ubnZtIgoKaWYgWyAtZiAiJHtSVU5ORVJfRElSfS8ucnVubmVyIiBdOyB0aGVuCiAgZWNobyAiW0lORk9dIFJ1bm5lciBhbHJlYWR5IGNvbmZpZ3VyZWQuIEVuc3VyaW5nIHNlcnZpY2UgaXMgaW5zdGFsbGVkIGFuZCBzdGFydGVkLiIKICBjZCAiJHtSVU5ORVJfRElSfSIKICBET0NLRVJfQ09ORklHX0RJUj0iJEhPTUUvLmRvY2tlciIKICBFQ1JfVVJMPSI3ODYzODI5NDAwMjguZGtyLmVjci4ke0FXU19SRUdJT046LWFwLW5vcnRoZWFzdC0yfS5hbWF6b25hd3MuY29tIgogIG1rZGlyIC1wICIkRE9DS0VSX0NPTkZJR19ESVIiCiAgaWYgISBncmVwIC1xICJlY3ItbG9naW4iICIke0RPQ0tFUl9DT05GSUdfRElSfS9jb25maWcuanNvbiIgMj4vZGV2L251bGw7IHRoZW4KICAgIGVjaG8gIltJTkZPXSBEb2NrZXIgY3JlZEhlbHBlciBmb3IgRUNSIG5vdCBmb3VuZCwgY29uZmlndXJpbmcuLi4iCiAgICBjYXQgPiAiJHtET0NLRVJfQ09ORklHX0RJUn0vY29uZmlnLmpzb24iIDw8RU9GCnsKICAgICJjcmVkSGVscGVycyI6IHsKICAgICAgICAiJHtFQ1JfVVJMfSI6ICJlY3ItbG9naW4iCiAgICB9Cn0KRU9GCiAgICBjaG93biAtUiBlYzItdXNlcjplYzItdXNlciAiJERPQ0tFUl9DT05GSUdfRElSIgogIGZpCiAgc3VkbyAuL3N2Yy5zaCBpbnN0YWxsIHx8IHRydWUKICBzdWRvIC4vc3ZjLnNoIHN0YXJ0ICAgfHwgdHJ1ZQogIGVjaG8gIltJTkZPXSBSdW5uZXIgc2VydmljZSBlbnN1cmVkLiBFeGl0aW5nLiIKICBleGl0IDAKZmkKZ2V0X2ltZHMoKSB7CiAgdG9rZW49JChjdXJsIC1zIC1YIFBVVCAiaHR0cDovLzE2OS4yNTQuMTY5LjI0L2xhdGVzdC9hcGkvdG9rZW4iIC1IICJYLWF3cy1lYzItbWV0YWRhdGEtdG9rZW4tdHRsLXNlY29uZHM6IDIxNjAwIiB8fCB0cnVlKQogIGlmIFsgLW4gIiR0b2tlbiIgXTsgdGhlbgogICAgY3VybCAtcyAtSCAiWC1hd3MtZWMyLW1ldGFkYXRhLXRva2VuOiAkdG9rZW4iICIkQCIKICBlbHNlCiAgICBjdXJsIC1zICIkQCIKICBmaQp9CkFXU19SRUdJT049JChnZXRfaW1kcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9keW5hbWljL2luc3RhbmNlLWlkZW50aXR5L2RvY3VtZW50IHwganEgLXIgLnJlZ2lvbikKClJFUE9fT1dORVI9Imp1bmd5dXlhIgpSRVBPX05BTUU9Im5ldy1ibG9nIgpQQVJBTUVURVJfUEFUSD0iL25ldy1ibG9nL2NpY2QiCgpta2RpciAtcCAiJFJVTk5FUl9ESVIiCmNob3duIGVjMi11c2VyOmVjMi11c2VyICIkUlVOTkVSX0RJUiIKCmlmICEgY29tbWFuZCAtdiBkb2NrZXItY3JlZGVudGlhbC1lY3ItbG9naW4gPi9kZXYvbnVsbCAyPiYxOyB0aGVuCiAgZWNobyAiW0lORk9dIEluc3RhbGxpbmcgZG9ja2VyLWNyZWRlbnRpYWwtZWNyLWxvZ2luIGhlbHBlci4uLiIKICBzdWRvIGRuZiBpbnN0YWxsIC15IGFtYXpvbi1lY3ItY3JlZGVudGlhbC1oZWxwZXIgfHwgdHJ1ZQpmaQoKY2QgIiRIT01FIgppZiBbICEgLWQgIiROVk1fRElSIiBdOyB0aGVuCiAgZWNobyAiLS0tIEluc3RhbGxpbmcgbnZtIC0tLSIKICBjdXJsIC1vLSBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbnZtLXNoL252bS92MC4zOS43L2luc3RhbGwuc2ggfCBiYXNoCmZpCgojIFvtlbXsi6wg7IiY7KCVXSDquLDsobTsnZggaWYg66y47J2EIOygnOqxsO2VmOqzoCwgbnZt7J2EIOyCrOyaqe2VmOq4sCDsp4HsoITsl5Ag7ZWt7IOBIOy0iOq4sO2ZlCDsiqTtgazrpr3tirjrpbwgc291cmNlIO2VqeuLiOuLpC4KIyDsnbTroIfqsowg7ZWY66m0IG5vbi1pbnRlcmFjdGl2ZSDshbjsl5DshJzrj4QgbnZtIOuqheugueyWtOqwgCDtmZXsi6TtlZjqsowg7J6R64+Z7ZWp64uI64ukLgouICIkTlZNX0RJUi9udm0uc2giCgojIFvtlbXsi6wg7IiY7KCVXSDsnbTsoJwgbnZtIOuqheugueyWtOqwgCDsmYTrsr3tlZjqsowg7J6R64+Z7ZWY64qUIOqyg+ydtCDrs7TsnqXrkKnri4jri6QuCm52bSBpbnN0YWxsIDIyCm5wbSBpbnN0YWxsIC1nIHBucG0KCk5PREVfQklOX0RJUj0iJE5WTV9ESVIvdmVyc2lvbnMvbm9kZS8kKG52bSB2ZXJzaW9uKS9iaW4iCmlmIFsgLWQgIiROT0RFX0JJTl9ESVIiIF07IHRoZW4KICBzdWRvIGxuIC1zZiAiJE5PREVfQklOX0RJUi9ub2RlIiAvdXNyL2Jpbi9ub2RlCiAgc3VkbyBsbiAtc2YgIiROT0RFX0JJTl9ESVIvbnBtIiAvdXNyL2Jpbi9ucG0KICBzdWRvIGxuIC1zZiAiJE5PREVfQklOX0RJUi9ucHgiIC91c3IvYmluL25weApmaQppZiBjb21tYW5kIC12IHBucG0gPi9kZXYvbnVsbCAyPiYxOyB0aGVuCiAgc3VkbyBsbiAtc2YgIiQoY29tbWFuZCAtdiBwbnBtKSIgL3Vzci9iaW4vcG5wbQpmaQplY2hvICJOb2RlIHZlcnNpb246ICQobm9kZSAtLXZlcnNpb24pIgplY2hvICJwbnBtIHZlcnNpb246ICQocG5wbSAtLXZlcnNpb24pIgoKY2QgIiRSVU5ORVJfRElSIgpMQVRFU1RfVEFHPSQoY3VybCAtcyAnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9hY3Rpb25zL3J1bm5lci9yZWxlYXNlcy9sYXRlc3QnIHwganEgLXIgLnRhZ19uYW1lIHwgc2VkICdzL152Ly8nKQpUQVJCQUxMPSJhY3Rpb25zLXJ1bm5lci1saW51eC1hcm02NC0ke0xBVEVTVF9UQUd9LnRhci5neiIKZWNobyAiW0lORk9dIERvd25sb2FkaW5nIEdpdEh1YiBSdW5uZXIgdiR7TEFURVNUX1RBR30uLi4iCm49MAp1bnRpbCBbICRuIC1nZSA1IF0KZG8KICBjdXJsIC0tZmFpbCAtLXNpbGVudCAtLXNob3ctZXJyb3IgLUwgLW8gIiR7VEFSQkFMTH0iICJodHRwczovL2dpdGh1Yi5jb20vYWN0aW9ucy9ydW5uZXIvcmVsZWFzZXMvZG93bmxvYWQvdiR7TEFURVNUX1RBR30vJHtUQVJCQUxMfSIgJiYgYnJlYWsKICBuPSQoKG4rMSkpCiAgZWNobyAiW1dBUk5dIFRhcmJhbGwgZG93bmxvYWQgZmFpbGVkLCByZXRyeSAkbi81IGluIDMgc2Vjb25kcy4uLiIKICBzbGVlcCAzCmRvbmUKaWYgWyAhIC1mICIke1RBUkJBTEx9IiBdOyB0aGVuCiAgZWNobyAiW0VSUk9SXSBEb3dubG9hZCBmYWlsZWQgYWZ0ZXIgNSByZXRyaWVzLiIgPiYyCiAgZXhpdCAxCmZpCnRhciB4emYgIiR7VEFSQkFMTH0iCmlmIFsgLWYgIi4vYmluL2luc3RhbGxkZXBlbmRlbmNpZXMuc2giIF07IHRoZW4KICBlY2hvICJbSU5GT10gUnVubmluZyBwcm92aWRlZCBpbnN0YWxsZGVwZW5kZW5jaWVzLnNoLi4uIgogIHN1ZG8gLi9iaW4vaW5zdGFsbGRlcGVuZGVuY2llcy5zaCB8fCBlY2hvICJbV0FSTl0gaW5zdGFsbGRlcGVuZGVuY2llcy5zaCBmYWlsZWQsIGNvbnRpbnVpbmcgd2l0aCBmYWxsYmFjay4iCmZpCmlmICEgbGRjb25maWcgLXAgfCBncmVwIC1pIGxpYmljdSA+L2Rldi9udWxsIDI+JjE7IHRoZW4KICBlY2hvICJbSU5GT10gbGliaWN1IG5vdCBmb3VuZC4gSW5zdGFsbGluZyBmYWxsYmFjayBkZXBlbmRlbmNpZXMuLi4iCiAgc3VkbyBkbmYgaW5zdGFsbCAteSBsaWJpY3UgbGlidW53aW5kIHx8IHRydWUKZmkKCmVjaG8gIltJTkZPXSBSZXRyaWV2aW5nIHNlY3JldHMgZnJvbSBTU00gUGFyYW1ldGVyIFN0b3JlLi4uIgpTRUNSRVRTX0pTT049JChhd3Mgc3NtIGdldC1wYXJhbWV0ZXJzIFwKICAtLW5hbWVzICIke1BBUkFNRVRFUl9QQVRIfS9naXRodWItcGF0IiAiJHtQQVJBTUVURVJfUEFUSH0vdHVyYm8tdG9rZW4iICIke1BBUkFNRVRFUl9QQVRIfS90dXJiby1zaWduYXR1cmUta2V5IiBcCiAgLS13aXRoLWRlY3J5cHRpb24gLS1xdWVyeSAiUGFyYW1ldGVycyIgLS1vdXRwdXQganNvbiAtLXJlZ2lvbiAiJHtBV1NfUkVHSU9OfSIpCgpHSVRIVUJfUEFUPSQoZWNobyAiJHtTRUNSRVRTX0pTT059IiB8IGpxIC1yICcuW10gfCBzZWxlY3QoLk5hbWU9PSInJHtQQVJBTUVURVJfUEFUSH0vZ2l0aHViLXBhdCciKS5WYWx1ZScpCmV4cG9ydCBUVVJCT19UT0tFTj0kKGVjaG8gIiR7U0VDUkVUU19KU09OfSIgfCBqcSAtciAnLltdIHwgc2VsZWN0KC5OYW1lPT0iJyR7UEFSQU1FVEVSX1BBVEh9L3R1cmJvLXRva2VuJyIpLlZhbHVlJykKZXhwb3J0IFRVUkJPX1JFTU9URV9DQUNIRV9TSUdOQVRVUkVfS0VZPSQoZWNobyAiJHtTRUNSRVRTX0pTT059IiB8IGpxIC1yICcuW10gfCBzZWxlY3QoLk5hbWU9PSInJHtQQVJBTUVURVJfUEFUSH0vdHVyYm8tc2lnbmF0dXJlLWtleSciKS5WYWx1ZScpCgppZiBbIC16ICIke0dJVEhVQl9QQVR9IiBdOyB0aGVuCiAgZWNobyAnW0VSUk9SXSBDb3VsZCBub3QgZmV0Y2ggR2l0SHViIFBBVCBmcm9tIFNTTSBQYXJhbWV0ZXIgU3RvcmUuJyA+JjIKICBleGl0IDEKZmkKCmVjaG8gIltJTkZPXSBSZXF1ZXN0aW5nIHJlZ2lzdHJhdGlvbiB0b2tlbi4uLiIKUkVHX1RPS0VOPSQoY3VybCAtc1ggUE9TVCAtSCAiQXV0aG9yaXphdGlvbjogdG9rZW4gJHtHSVRIVUJfUEFUfSIgImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvJHtSRVBPX09XTkVSfS8ke1JFUE9fTkFNRX0vYWN0aW9ucy9ydW5uZXJzL3JlZ2lzdHJhdGlvbi10b2tlbiIgfCBqcSAtciAudG9rZW4pCmlmIFsgLXogIiR7UkVHX1RPS0VOfSIgXTsgdGhlbgogIGVjaG8gJ1tFUlJPUl0gRmFpbGVkIHRvIGdldCByZWdpc3RyYXRpb24gdG9rZW4uJyA+JjIKICBleGl0IDEKZmkKCmVjaG8gIltJTkZPXSBDb25maWd1cmluZyBydW5uZXIuLi4iClJFUE9fV0VCX1VSTD0iaHR0cHM6Ly9naXRodWIuY29tLyR7UkVQT19PV05FUn0vJHtSRVBPX05BTUV9IgouL2NvbmZpZy5zaCAtLXVybCAiJHtSRVBPX1dFQl9VUkx9IiAtLXRva2VuICIke1JFR19UT0tFTn0iIC0tbmFtZSAiJChob3N0bmFtZSkiIC0tbGFiZWxzICJzZWxmLWhvc3RlZCxsaW51eCxhcm02NCIgLS11bmF0dGVuZGVkIC0tcmVwbGFjZQoKRE9DS0VSX0NPTkZJR19ESVI9IiRIT01FLy5kb2NrZXIiCm1rZGlyIC1wICIkRE9DS0VSX0NPTkZJR19ESVIiCkVDUl9VUkw9Ijc4NjM4Mjk0MDAyOC5ka3IuZWNyLiR7QVdTX1JFR0lPTn0uYW1hem9uYXdzLmNvbSIKCmVjaG8gIltJTkZPXSBDb25maWd1cmluZyBEb2NrZXIgdG8gdXNlIEVDUiBjcmVkZW50aWFsIGhlbHBlciBmb3IgJHtFQ1JfVVJMfS4uLiIKY2F0ID4gIiR7RE9DS0VSX0NPTkZJR19ESVJ9L2NvbmZpZy5qc29uIiA8PEVPRgp7CiAgICAiY3JlZEhlbHBlcnMiOiB7CiAgICAgICAgIiR7RUNSX1VSTH0iOiAiZWNyLWxvZ2luIgogICAgfQp9CkVPRgpjaG93biAtUiBlYzItdXNlcjplYzItdXNlciAiJERPQ0tFUl9DT05GSUdfRElSIgoKZWNobyAiW0lORk9dIEluc3RhbGxpbmcgYW5kIHN0YXJ0aW5nIHJ1bm5lciBzZXJ2aWNlLi4uIgpzdWRvIC4vc3ZjLnNoIGluc3RhbGwKc3VkbyAuL3N2Yy5zaCBzdGFydAoKZWNobyAiW0lORk9dIFJ1bm5lciBzZXR1cCBzY3JpcHQgZmluaXNoZWQgc3VjY2Vzc2Z1bGx5IGF0ICQoZGF0ZSAtdSki\" | base64 -d > /home/ec2-user/setup_runner.sh\nchown ec2-user:ec2-user /home/ec2-user/setup_runner.sh\nchmod +x /home/ec2-user/setup_runner.sh\nsudo -u ec2-user /home/ec2-user/setup_runner.sh"
    }
   },
   "DependsOn": [
    "RunnerRoleDefaultPolicyF88A4DBD",
    "RunnerRoleBA0605C0"
   ],
   "Metadata": {
    "aws:cdk:path": "CiCdStack/GitHubRunnerInstance/Resource"
   }
  },
  "RunnerEIP": {
   "Type": "AWS::EC2::EIP",
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerEIP"
   }
  },
  "RunnerEIPAssociation": {
   "Type": "AWS::EC2::EIPAssociation",
   "Properties": {
    "EIP": {
     "Ref": "RunnerEIP"
    },
    "InstanceId": {
     "Ref": "GitHubRunnerInstance6965C09B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/RunnerEIPAssociation"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WMyw6CMBBFv8V9GbEb3RpjDCsJfICppSQDpUP6kJCm/25Ajbo695XLged7yDdicpls+kzjHWLthexZpRwFKxUTk7tFJTnEWslg0c8XS2Fkp9b8B4VxXhipluZXn4vyjaNzJFF4JJMYigFiRXrdrCxJo5wX+1Wfo9JSi1qltITX4MfgEzPUKOjc9sE57A6QbzqHmNlgPA4KqhefUXQlwOQAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CiCdStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RunnerPublicIP": {
   "Description": "Public IP address of the self-hosted runner EC2 instance.",
   "Value": {
    "Ref": "RunnerEIP"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}